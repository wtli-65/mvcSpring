<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>mvcSpring</display-name>
  
	<context-param>    
	  	<param-name>contextConfigLocation</param-name>    
	  	<param-value>/WEB-INF/spring*.xml</param-value>    
  </context-param>    
  <listener>    
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>    
  </listener>  
<!--   <context-param>
	<param-name>webAppRootKey</param-name>
	<param-value>webapp.root</param-value>
</context-param> -->
 <display-name>ContentManagementSystem</display-name>  
    <!-- 添加spring3控制器, DispatcherServletDispatcherServlet是Spring MVC 的入口  
        所有进入Spring Web的 Request都经过 DispatcherServlet   
    -->  
    <servlet>   
        <servlet-name>springmvc</servlet-name>   
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>   
        <load-on-startup>1</load-on-startup>   
    </servlet>     
    <!-- 配置spring3的映射规则 -->
    <servlet-mapping>   
        <servlet-name>springmvc</servlet-name>   
        <url-pattern>/</url-pattern>   
    </servlet-mapping> 
    
    <!-- 配置log4j -->  
    <!-- spring log4j configuration -->  
    <!-- 由Spring加载的log4j配置文件的位置 -->  
    <!-- Web项目Spring加载log4j的监听 -->  
    <listener>  
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
    </listener>    
    <context-param>  
        <param-name>log4jConfigLocation</param-name>  
        <param-value>/WEB-INF/classes/log4j.properties</param-value>  
    </context-param>  
    <!-- Spring刷新log4j配置文件的间隔，单位为millisecond -->  
    <context-param>  
        <param-name>log4jRefreshIntercal</param-name>  
        <param-value>60000</param-value>  
    </context-param>   
    <!-- 配置 org.springframework.web.filter.HiddenHttpMethodFilter，可以把POST请求转换为PUT或DELETE请求-->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> 
    <!-- 默认跳转到根目录下的页面 -->  
    <welcome-file-list>  
        <welcome-file>/WEB-INF/index.jsp</welcome-file>  
    </welcome-file-list>   
    <!-- session timeout setup, 10 mins -->  
    <session-config>  
        <session-timeout>10</session-timeout>  
    </session-config> 
</web-app>